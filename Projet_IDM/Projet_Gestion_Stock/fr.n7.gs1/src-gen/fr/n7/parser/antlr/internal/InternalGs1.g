/*
 * generated by Xtext 2.32.0
 */
grammar InternalGs1;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.n7.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.n7.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.n7.services.Gs1GrammarAccess;

}

@parser::members {

 	private Gs1GrammarAccess grammarAccess;

    public InternalGs1Parser(TokenStream input, Gs1GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected Gs1GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getApplicationsApplicationParserRuleCall_0());
			}
			lv_applications_0_0=ruleApplication
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"applications",
					lv_applications_0_0,
					"fr.n7.Gs1.Application");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Application'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getApplicationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getTablesTableParserRuleCall_2_0());
				}
				lv_tables_2_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"tables",
						lv_tables_2_0,
						"fr.n7.Gs1.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Table'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getTableAccess().getIdKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getTableAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_INT
				{
					newLeafNode(lv_id_5_0, grammarAccess.getTableAccess().getIdINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Nom'
		{
			newLeafNode(otherlv_6, grammarAccess.getTableAccess().getNomKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getTableAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_Nom_8_0=RULE_STRING
				{
					newLeafNode(lv_Nom_8_0, grammarAccess.getTableAccess().getNomSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"Nom",
						lv_Nom_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getColonnesColonneParserRuleCall_9_0());
				}
				lv_colonnes_9_0=ruleColonne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"colonnes",
						lv_colonnes_9_0,
						"fr.n7.Gs1.Colonne");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleColonne
entryRuleColonne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonneRule()); }
	iv_ruleColonne=ruleColonne
	{ $current=$iv_ruleColonne.current; }
	EOF;

// Rule Colonne
ruleColonne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonne_deriveeParserRuleCall_0());
		}
		this_Colonne_derivee_0=ruleColonne_derivee
		{
			$current = $this_Colonne_derivee_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonne_referenceeParserRuleCall_1());
		}
		this_Colonne_referencee_1=ruleColonne_referencee
		{
			$current = $this_Colonne_referencee_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonnesimpleParserRuleCall_2());
		}
		this_Colonnesimple_2=ruleColonnesimple
		{
			$current = $this_Colonnesimple_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColonne_derivee
entryRuleColonne_derivee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonne_deriveeRule()); }
	iv_ruleColonne_derivee=ruleColonne_derivee
	{ $current=$iv_ruleColonne_derivee.current; }
	EOF;

// Rule Colonne_derivee
ruleColonne_derivee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colonne_derivee'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonne_deriveeAccess().getColonne_deriveeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getColonne_deriveeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_deriveeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColonne_deriveeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getColonne_deriveeAccess().getIdKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getColonne_deriveeAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_INT
				{
					newLeafNode(lv_id_5_0, grammarAccess.getColonne_deriveeAccess().getIdINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_deriveeRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Nom'
		{
			newLeafNode(otherlv_6, grammarAccess.getColonne_deriveeAccess().getNomKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getColonne_deriveeAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_Nom_8_0=RULE_STRING
				{
					newLeafNode(lv_Nom_8_0, grammarAccess.getColonne_deriveeAccess().getNomSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_deriveeRule());
					}
					setWithLastConsumed(
						$current,
						"Nom",
						lv_Nom_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='expression'
		{
			newLeafNode(otherlv_9, grammarAccess.getColonne_deriveeAccess().getExpressionKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getColonne_deriveeAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonne_deriveeAccess().getExpressionExpressionParserRuleCall_11_0());
				}
				lv_expression_11_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonne_deriveeRule());
					}
					set(
						$current,
						"expression",
						lv_expression_11_0,
						"fr.n7.Gs1.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getColonne_deriveeAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleColonne_referencee
entryRuleColonne_referencee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonne_referenceeRule()); }
	iv_ruleColonne_referencee=ruleColonne_referencee
	{ $current=$iv_ruleColonne_referencee.current; }
	EOF;

// Rule Colonne_referencee
ruleColonne_referencee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colonne_referencee'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonne_referenceeAccess().getColonne_referenceeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getColonne_referenceeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_referenceeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColonne_referenceeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getColonne_referenceeAccess().getIdKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getColonne_referenceeAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_INT
				{
					newLeafNode(lv_id_5_0, grammarAccess.getColonne_referenceeAccess().getIdINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_referenceeRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Nom'
		{
			newLeafNode(otherlv_6, grammarAccess.getColonne_referenceeAccess().getNomKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getColonne_referenceeAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_Nom_8_0=RULE_STRING
				{
					newLeafNode(lv_Nom_8_0, grammarAccess.getColonne_referenceeAccess().getNomSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_referenceeRule());
					}
					setWithLastConsumed(
						$current,
						"Nom",
						lv_Nom_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='table'
		{
			newLeafNode(otherlv_9, grammarAccess.getColonne_referenceeAccess().getTableKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getColonne_referenceeAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_referenceeRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getColonne_referenceeAccess().getTableTableCrossReference_11_0());
				}
			)
		)
		otherlv_12='colonne'
		{
			newLeafNode(otherlv_12, grammarAccess.getColonne_referenceeAccess().getColonneKeyword_12());
		}
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getColonne_referenceeAccess().getEqualsSignKeyword_13());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonne_referenceeRule());
					}
				}
				otherlv_14=RULE_ID
				{
					newLeafNode(otherlv_14, grammarAccess.getColonne_referenceeAccess().getColonneColonneCrossReference_14_0());
				}
			)
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getColonne_referenceeAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleColonnesimple
entryRuleColonnesimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonnesimpleRule()); }
	iv_ruleColonnesimple=ruleColonnesimple
	{ $current=$iv_ruleColonnesimple.current; }
	EOF;

// Rule Colonnesimple
ruleColonnesimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colonnesimple'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonnesimpleAccess().getColonnesimpleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getColonnesimpleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonnesimpleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColonnesimpleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getColonnesimpleAccess().getIdKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getColonnesimpleAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_INT
				{
					newLeafNode(lv_id_5_0, grammarAccess.getColonnesimpleAccess().getIdINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonnesimpleRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Nom'
		{
			newLeafNode(otherlv_6, grammarAccess.getColonnesimpleAccess().getNomKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getColonnesimpleAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_Nom_8_0=RULE_STRING
				{
					newLeafNode(lv_Nom_8_0, grammarAccess.getColonnesimpleAccess().getNomSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonnesimpleRule());
					}
					setWithLastConsumed(
						$current,
						"Nom",
						lv_Nom_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getColonnesimpleAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getExpressionBinaireParserRuleCall_0());
		}
		this_ExpressionBinaire_0=ruleExpressionBinaire
		{
			$current = $this_ExpressionBinaire_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAccesVariableParserRuleCall_1());
		}
		this_AccesVariable_1=ruleAccesVariable
		{
			$current = $this_AccesVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionBinaire
entryRuleExpressionBinaire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBinaireRule()); }
	iv_ruleExpressionBinaire=ruleExpressionBinaire
	{ $current=$iv_ruleExpressionBinaire.current; }
	EOF;

// Rule ExpressionBinaire
ruleExpressionBinaire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExpressionBinaire'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpressionBinaireAccess().getExpressionBinaireKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExpressionBinaireAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionBinaireRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpressionBinaireAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='operandeG'
		{
			newLeafNode(otherlv_3, grammarAccess.getExpressionBinaireAccess().getOperandeGKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getExpressionBinaireAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionBinaireAccess().getOperandeGExpressionParserRuleCall_5_0());
				}
				lv_operandeG_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionBinaireRule());
					}
					set(
						$current,
						"operandeG",
						lv_operandeG_5_0,
						"fr.n7.Gs1.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='operateur'
		{
			newLeafNode(otherlv_6, grammarAccess.getExpressionBinaireAccess().getOperateurKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getExpressionBinaireAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionBinaireAccess().getOperateurOperateurParserRuleCall_8_0());
				}
				lv_operateur_8_0=ruleOperateur
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionBinaireRule());
					}
					set(
						$current,
						"operateur",
						lv_operateur_8_0,
						"fr.n7.Gs1.Operateur");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='operandeD'
		{
			newLeafNode(otherlv_9, grammarAccess.getExpressionBinaireAccess().getOperandeDKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getExpressionBinaireAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionBinaireAccess().getOperandeDExpressionParserRuleCall_11_0());
				}
				lv_operandeD_11_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionBinaireRule());
					}
					set(
						$current,
						"operandeD",
						lv_operandeD_11_0,
						"fr.n7.Gs1.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getExpressionBinaireAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleAccesVariable
entryRuleAccesVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccesVariableRule()); }
	iv_ruleAccesVariable=ruleAccesVariable
	{ $current=$iv_ruleAccesVariable.current; }
	EOF;

// Rule AccesVariable
ruleAccesVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AccesVariable'
		{
			newLeafNode(otherlv_0, grammarAccess.getAccesVariableAccess().getAccesVariableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAccesVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccesVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAccesVariableAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='colonne'
		{
			newLeafNode(otherlv_3, grammarAccess.getAccesVariableAccess().getColonneKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getAccesVariableAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccesVariableRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getAccesVariableAccess().getColonneColonneCrossReference_5_0());
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAccesVariableAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleOperateur
entryRuleOperateur returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperateurRule()); }
	iv_ruleOperateur=ruleOperateur
	{ $current=$iv_ruleOperateur.current; }
	EOF;

// Rule Operateur
ruleOperateur returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Operateur'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperateurAccess().getOperateurKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperateurAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperateurAccess().getTypeKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getOperateurAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperateurAccess().getTypeOperationsEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperateurRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"fr.n7.Gs1.Operations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperateurAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Rule Operations
ruleOperations returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='addition'
			{
				$current = grammarAccess.getOperationsAccess().getAdditionEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationsAccess().getAdditionEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='soustraction'
			{
				$current = grammarAccess.getOperationsAccess().getSoustractionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationsAccess().getSoustractionEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='multiplication'
			{
				$current = grammarAccess.getOperationsAccess().getMultiplicationEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperationsAccess().getMultiplicationEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='division'
			{
				$current = grammarAccess.getOperationsAccess().getDivisionEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperationsAccess().getDivisionEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
